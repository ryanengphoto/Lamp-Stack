openapi: 3.0.4
info:
  title: ContactBook Manager - OpenAPI 3.0
  description: |-
    ContactBook Manager project for COP4331 Group 11 (Fall 2025).
    - [GitHub](https://github.com/ryanengphoto/Lamp-Stack)
  termsOfService: https://swagger.io/terms/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0

servers:
  - url: https://lamp-stack4331.xyz/LAMPAPI

tags:
  - name: user
    description: Operations about the user
  - name: contacts
    description: Operations about the contactbook

paths:
  /user:
    post:
      tags: [user]
      summary: Create user
      description: Register a new user account
      operationId: createUser
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        '200':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /user/login:
    post:
      tags: [user]
      summary: Login user
      description: Verify login credentials and return user info (no password)
      operationId: loginUser
      requestBody:
        required: true
        description: Login credentials
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  example: theUser
                password:
                  type: string
                  format: password
                  example: '12345'
              required: [login, password]
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials
        default:
          $ref: '#/components/responses/ErrorResponse'

  /user/{login}:
    get:
      tags: [user]
      summary: Get user by login
      operationId: getUserByName
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    delete:
      tags: [user]
      summary: Delete user
      operationId: deleteUser
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted
        '404':
          description: User not found

  /contacts:
    get:
      tags: [contacts]
      summary: List all contacts
      operationId: listContacts
      responses:
        '200':
          description: Array of contacts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
    post:
      tags: [contacts]
      summary: Add a new contact
      operationId: addContact
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        '200':
          description: Contact created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'

  /contacts/bulk:
    post:
      tags: [contacts]
      summary: Add multiple contacts
      operationId: addContactsBulk
      requestBody:
        $ref: '#/components/requestBodies/Contacts'
      responses:
        '200':
          description: Contacts created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'

  /contacts/{id}:
    get:
      tags: [contacts]
      summary: Get contact by ID
      operationId: getContactById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Contact details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '404':
          description: Contact not found
    put:
      tags: [contacts]
      summary: Update a specific contact
      description: Update one of the userâ€™s contacts by ID.
      operationId: updateContact
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 10
          description: ID of the contact to update
      requestBody:
        required: true
        description: New values for the contact. All fields are required.
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: Jane
                lastName:
                  type: string
                  example: Doe
                email:
                  type: string
                  format: email
                  example: jane.doe@email.com
                phone:
                  type: string
                  example: "555-1234"
              required: [firstName, lastName, email, phone]
      responses:
        '200':
          description: Contact updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Contact updated successfully
                  error:
                    type: string
                    nullable: true
                    example: null
        '404':
          description: Contact not found
        '400':
          description: Invalid input
        default:
          $ref: '#/components/responses/ErrorResponse'
    delete:
      tags: [contacts]
      summary: Delete contact
      operationId: deleteContact
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Contact deleted
        '404':
          description: Contact not found

components:
  schemas:
    Contact:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        phone:
          type: string
          example: "12345"
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        login:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required: [code, message]

  requestBodies:
    User:
      description: User object to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    Contact:
      description: Contact object to be created or updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
    Contacts:
      description: List of contacts to be added
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Contact'

  responses:
    ErrorResponse:
      description: Error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
